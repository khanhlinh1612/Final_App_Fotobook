  = javascript_include_tag 'album.js'
  .picture.position-relative
    .row.h-100.position-relative
      .col-6.h-100.position-relative(data-bs-toggle="modal", data-bs-target="#exampleModal-#{post.id}")
        == image_tag post.image.url , class:"img-fluid img-thumbnail w-100 h-100" if post.image?
      .col-6.h-100.position-relative
        .row.h-100.position-relative.py-2
          .col-md-12
            .row.pe-2
              .col-9.d-flex.align-items-center
                = link_to image_tag(post.user.avatar.url,class:"avatar align-items-center") ,user_path(post.user.id) if post.user.avatar?
                = link_to post.user.first_name + " " + post.user.last_name, user_path(post.user.id), class: "d-flex float-start mt-1 name text-decoration-none "
              .col-3.position-relative.mt-2
                - if controller_name == "discover" && current_user.id != post.user.id
                  - relationship = current_user.active_relationships.find_by(followed_id: post.user.id)
                  - if relationship.nil?
                    = button_to "follow", relationships_path, params: {relationship: {followed_id: post.user.id}}, method: :post, class: "btn follow_label btn-outline-warning position-absolute"
                  - else
                    = button_to "following", relationship_path(relationship), method: :delete, class: "btn following_label btn-outline-warning position-absolute"
          .col-md-12
            h5.title_post =post.title
          .col-md-12.h-50.position-relative
            p.h-100.description = post.description

          .col-md-12.post_info.align-items-center
            -if user_signed_in?
              -if @mode == "PHOTO"
                - like = current_user.like_photos.find_by(photo_id: post.id)
                - if like.nil?
                  = button_to like_photos_path , params: {like_photo: {photo_id: post.id}}, method: :post, class: "button_like" do
                    .d-flex.flex-row
                      i.fa-sharp.fa-solid.fa-heart.fa-beat.icon_heart.me-1.text-secondary
                      p.number-icon
                        = (post.like_photos.size).to_s
                - else
                  = button_to like_photo_path(like), method: :delete, class: "button_like" do
                    .d-flex.flex-row
                      i.fa-sharp.fa-solid.fa-heart.fa-beat.icon_heart.me-1
                      p.number-icon
                        = (post.like_photos.size).to_s
              -else
                - like = current_user.like_albums.find_by(album_id: post.id)
                - if like.nil?
                  = button_to like_albums_path , params: {like_album: {album_id: post.id}}, method: :post, class: "button_like" do
                    .d-flex.flex-row
                      i.fa-sharp.fa-solid.fa-heart.fa-beat.icon_heart.me-1.text-secondary
                      p.number-icon
                        = (post.like_albums.size).to_s
                - else
                  = button_to like_album_path(like), method: :delete, class: "button_like" do
                    .d-flex.flex-row
                      i.fa-sharp.fa-solid.fa-heart.fa-beat.icon_heart.me-1
                      p.number-icon
                        = (post.like_albums.size).to_s
            -else
              -if @mode == "PHOTO"
                = button_to like_photos_path , params: {like_photo: {photo_id: post.id}}, method: :post, class: "button_like" do
                  .d-flex.flex-row
                    i.fa-sharp.fa-solid.fa-heart.fa-beat.icon_heart.me-1.text-secondary
                    p.number-icon
                      = (post.like_photos.size).to_s
              -else
                = button_to like_albums_path , params: {like_album: {album_id: post.id}}, method: :post, class: "button_like" do
                  .d-flex.flex-row
                    i.fa-sharp.fa-solid.fa-heart.fa-beat.icon_heart.me-1.text-secondary
                    p.number-icon
                      = (post.like_albums.size).to_s
            p.time-post =post.created_at.in_time_zone(+7).strftime("%I:%M %p %d/%m/%Y").downcase
      .modal.fade(id="exampleModal-#{post.id}" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true")
        .modal-dialog.modal-lg.modal-dialog-scrollable
          .modal-content.px-3.py-3.position-relative
            i.fa.fa-close.modal-close(data-bs-dismiss="modal" aria-label="Close")
            h5.d-block.font-weight-bold.title_post.mt-3.d-flex.float-start =post.title
            .modal-body
              -if @mode == "PHOTO"

                img.d-block.img-fluid.image_carousel.mb-3(src=post.image.url alt="Photo / Album thumbnail")
                p.description1 = post.description

              -else
                - if post.photos.any?
                  .carousel.slide.mb-3.carousel-fade(id="mycarousel-#{post.id}")
                    div.carousel-inner
                      -post.photos.each_with_index do |photo, index|
                        div class="carousel-item h-75 #{'active' if index == 0}"
                          = image_tag photo.image.url, class: 'd-block img-fluid image_carousel mb-3'
                          p.description1 = photo.description
                  a.carousel-control-prev(href="#mycarousel-#{post.id}" role="button" data-bs-slide="prev")
                    span.carousel-control-prev-icon(aria-hidden="true")
                    span.sr-only Previous
                  a.carousel-control-next(href="#mycarousel-#{post.id}" role="button" data-bs-slide="next")
                    span.carousel-control-next-icon(aria-hidden="true")
                    span.sr-only Next
                - else
                  p No photos available.
